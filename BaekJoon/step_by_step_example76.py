'''

 Backjoon _ exampels #

  "Baek 1052 - 물병 (Implementation)"   by Jinwoo Lee


 # Algorithm 

  0. 비트 마스킹을 이용한 풀이 => 상점에서 사야하는 물병의 최소값을 출력하라 

  1. 물병에 1L가 채워진 채로 시작한다는 점 

  2. 물병을 상점에서 사지 않고 옮길 수 있는 최소 물병의 수 (최소 : 같은 양의 물병 2개를 한개로 합침) 

    -> if N == 1 :  1

               2 :  2

               3 :  2  ( 1+1 , 1)

               4 :  1   

  3. 2에서의 N을 2진수로 변경하면  1 , 10, 101, 100 으로, 옮길 수 있는 최소 물병의 수는 bin(N).count(1)임을 알 수 있다.

  4. 최소 물병의 수 > K 일 경우 

    if N =6, k =1 then bin(6) = 110  이고,

    110 + 10 = 1000 으로  k = bin(new).count(1)을 만족 

    즉, N을 이진수로 변환시켜 최초로 만나게 되는 1 ( 가장 작은 이진수 단위)에 1(2)를 더하는 과정을 반복하면 최소한의 물의 개수를 구할 수 있다.




 # Attention for Implementation

  0. 비트 : 컴퓨터에서 다루는 최소 단위 

  1. 비트마스킹

     => 컴퓨터는 내부적으로 모든 자료를 이진수로 표현하기 때문에, 이 특성을 이용해 정수의 이진수 표현을 비트 연산을 통한(자료구조) 문제해결 방법을 비트마스크 라고 한다.

     => 더 빠른 수행시간, 간결한코드, 메모리 사용이라는 효과 


  1-1. 비트 연산 AND(&), OR(|), XOR(^), Shift( >>, <<), NOT (~)

     => XOR : 대응하는 숫자가 서로 다를 경우 1 , Shift : a >> b  : a의 bit를 b칸 만큼 우측으로 밀어냄 


  1-2. 비트 연산 응용

     * 원소 추가 : bin(0b0110 | (1 << 3 ))  # 0b0110 | 0b1000 = 0b1110

     * 원소 제거 : bin(0b1011 & ~(1 << 3))  # 0b1011  & 0b0111 = 0b0011

     * 원소 조회 : bin(0b1011 & ( 1<< 3))  # 0b1011 & 0b1000 = 0b1000

     * 원소 토글 : xor 이용 
'''

n, k = list(map(int,input().split()))

total = 0

if n >= k : 

    while bin(n).count('1') > k :

        cnt = 0

        cnt += 2 ** bin(n)[::-1].index('1')

        total += cnt
        
        n += cnt


print(total)