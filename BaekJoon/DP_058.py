

'''

 Backjoon _ exampels 17212

  "달나라 토끼를 위한 구매대금 지불 도우미"   by Jinwoo Lee


  < algorithm >

  * 지불금액 n에 대하여 동전의 수를 최소로 하는 프로그래밍 

     1) 잔돈의 종류 = [1,2,5,7] 임으로 n = 1,2,5,7 일 경우 지불해야 하는 동전의 수는 1 

        n = 3 일 경우,  2+1 -> 2개

        n = 4 일 경우,  2+2 -> 2개

        n = 6 일 경우,  3+3 -> 2개 
        
        n :  0 , 1, 2, 3, 4, 5, 6, 7
        dp = [0, 1, 1, 2, 2, 1, 2, 1 ]



     2) bottom_up & memoization 기법

        이 기법의 핵심은 '미리 구해놓은 값을 활용 한다' 임으로

        n >= 8 이상인 경우 부터 

        dp[8-7], dp[8-5], dp[8-2], dp[8-1] 값들을 각각 구해서 최소가 되는 값을 찾는다. =>  1,2,5.7 만큼 뺸 각 값들은 이미 최적화되서 구해진 값들이기 때문에 최소값을 찾으면 된다 
        
        8에서 [1,2,5,7]을 각각 뺴는 것은 동전의 수 1개를 미리 카운팅 한것과 같다       =>  + 1 

        즉, 점화식 :  value = min ( n - [1,2,5,7]의 각요소) + 1  성립


'''


def solution():


    num = int(input())

    dp = [0,1,1,2,2,1,2,1]

    if num > 7 :

        for idx in range(8, num+1):

            value = min( dp[idx-7], dp[idx-5], dp[idx-2], dp[idx-1]) +1

            dp.append(value)

    print(dp[num])
    
solution()

